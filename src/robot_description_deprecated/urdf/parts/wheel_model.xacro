<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="tergeo">
  
  <!-- include corresponding config file -->
  <xacro:include filename="$(find robot_description)/urdf/parts_cfg/base_world_cfg.xacro" ns="base" />
  <xacro:include filename="$(find robot_description)/urdf/parts_cfg/wheel_cfg.xacro" ns="wheel" />
  
  <!-- Definition of the wheel macro -->
  <xacro:macro name="wheel_model" params="wheel_name parent_link">

    <!-- args depend on macro params and cfg file -->
    <xacro:if value="${'left' in wheel_name}">
      <xacro:property name="wheel_xyz" value="0 ${+(base.width/2+wheel.thickness/2+wheel.y_dis)} ${-base.height/2+wheel.z_dis}" />
    </xacro:if>
    <xacro:if value="${'right' in wheel_name}">
      <xacro:property name="wheel_xyz" value="0 ${-(base.width/2+wheel.thickness/2+wheel.y_dis)} ${-base.height/2+wheel.z_dis}" />
    </xacro:if>
    <!-- wheel joint -->
  
    <joint name="${wheel_name}_joint" type="continuous">
      <parent link="${parent_link}" />
      <child link="${wheel_name}_link" />
      <origin xyz="${wheel_xyz}" rpy="${wheel.rpy}" />
      <axis xyz="${wheel.axis}" />
    </joint>

    <!-- wheel link -->
    <link name="${wheel_name}_link">
      <visual>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
        <geometry>
          <cylinder length="${wheel.thickness}" radius="${wheel.radius}" />
        </geometry>
        <material name="green" />
      </visual>

      <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
        <geometry>
          <cylinder length="${wheel.thickness}" radius="${wheel.radius}" />
        </geometry>
      </collision>

      <inertial>
        <origin xyz="0 0 0" />
        <mass value="${wheel.mass}" />
        <inertia ixx="${wheel.ixxiyy}" ixy="0" ixz="0"
                 iyy="${wheel.ixxiyy}" iyz="0"
                 izz="${wheel.izz}" />
      </inertial>
    
    </link>

    <!-- setup the motor -->
    <transmission name="${wheel_name}_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${wheel_name}_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${wheel_name}_motor">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>0.5</mechanicalReduction>
      </actuator>
    </transmission>

    <!-- gazebo element -->
    <gazebo reference="${wheel_name}_link">
      <mu1>${wheel.mu1}</mu1>
      <mu2>${wheel.mu2}</mu2>
      <kp>${wheel.kp}</kp>
      <kd>${wheel.kd}</kd>
      <minDepth>${wheel.min_depth}</minDepth>
      <maxVel>${wheel.max_vel}</maxVel>
      <fdir1>${wheel.fdir1}</fdir1>
      <material>Gazebo/Green</material>
    </gazebo>

  </xacro:macro>

  <!-- TODO: args communicate -->
  <xacro:macro name="wheel_control" params="left_wheel_name right_wheel_name" >
    <gazebo>
      <plugin name="robot_controller" filename="libgazebo_ros_diff_drive.so">
        <commandTopic>${wheel.sub_cmd_topic}</commandTopic>
        <odometryTopic>${wheel.pub_odom_topic}</odometryTopic>
        <odometryFrame>${wheel.odom_frame}</odometryFrame>
        <odometrySource>${wheel.odom_src}</odometrySource>
        <publishOdomTF>true</publishOdomTF>
        <robotBaseFrame>base_world</robotBaseFrame>
        <publishWheelTF>false</publishWheelTF>
        <publishTf>true</publishTf>
        <publishWheelJointState>true</publishWheelJointState>
        <legacyMode>false</legacyMode>
        <updateRate>${wheel.update_rate}</updateRate>
        <leftJoint>${left_wheel_name}_joint</leftJoint>
        <rightJoint>${right_wheel_name}_joint</rightJoint>
        <wheelSeparation>${base.width+2*wheel.thickness/2+2*wheel.y_dis}</wheelSeparation>
        <wheelDiameter>${2*wheel.radius}</wheelDiameter>
        <wheelAcceleration>${wheel.accel}</wheelAcceleration>
        <wheelTorque>${wheel.torque}</wheelTorque>
        <rosDebugLevel>na</rosDebugLevel>
      </plugin>
    </gazebo>

    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/rjptest</robotNamespace>
      </plugin>
    </gazebo>
  </xacro:macro>
</robot>